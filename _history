{"entries":[{"timestamp":1750271645452,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s://developers.google.com/blockly/xml\"><variables><variable id=\"A04CChM!60p/e;?Qdcc!\">analogValue</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let bit = 0\" numlines=\"1\" declaredvars=\"bit\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let analogValue = 0\" numlines=\"1\" declaredvars=\"analogValue\"></mutation></block></next></block></statement></block><block type=\"device_button_event\" x=\"264\" y=\"20\"><field name=\"NAME\">Button.A</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"A04CChM!60p/e;?Qdcc!\">analogValue</field><comment pinned=\"false\" h=\"80\" w=\"160\">Map the accelerometer's X-axis reading (-1024 to 1024) to a 10-bit value (0 to 1023)</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"math_map\"><value name=\"value\"><block type=\"device_acceleration\"><field name=\"NAME\">Dimension.X</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\"><field name=\"NUM\">-1024</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\"><field name=\"NUM\">1024</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\"><field name=\"NUM\">1023</field></shadow></value></block></value><next><block type=\"serial_writevalue\"><comment pinned=\"false\" h=\"80\" w=\"160\">Optional: Send the value to the serial console for debugging</comment><value name=\"name\"><shadow type=\"text\"><field name=\"TEXT\">value</field></shadow></value><value name=\"value\"><block type=\"variables_get\"><field name=\"VAR\" id=\"A04CChM!60p/e;?Qdcc!\">analogValue</field></block></value><next><block type=\"device_play_note\"><comment pinned=\"false\" h=\"80\" w=\"160\">Play the START tone\nPlay Middle C for 150ms</comment><value name=\"note\"><shadow type=\"device_note\"><field name=\"name\">262</field></shadow></value><value name=\"duration\"><shadow type=\"device_beat\"><field name=\"fraction\">BeatFraction.Whole</field></shadow><block type=\"math_number\"><field name=\"NUM\">150</field></block></value><next><block type=\"device_pause\"><data>{\"commentRefs\":[],\"fieldData\":{}}</data><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"for (let index = 9; index &gt;= 0; index--) {\" line1=\"        // Isolate the bit at the current 'index' position\" line2=\"        bit = (analogValue &gt;&gt; index) &amp; 1\" line3=\"\" line4=\"        // Display a &quot;1&quot; or &quot;0&quot; on the LED matrix\" line5=\"        if (bit == 1) {\" line6=\"            basic.showString(&quot;1&quot;) // Represents the GREEN LED for a '1'\" line7=\"        } else {\" line8=\"            basic.showString(&quot;0&quot;) // Represents the RED LED for a '0'\" line9=\"        }\" line10=\"        basic.pause(500) // Pause to make the sequence readable\" line11=\"    }\" numlines=\"12\"></mutation><next><block type=\"device_start_melody\"><field name=\"options\">MelodyOptions.Once</field><comment pinned=\"false\" h=\"80\" w=\"160\">Play the END tone (a \"double tone\" melody)</comment><value name=\"melody\"><shadow type=\"device_builtin_melody\"><field name=\"melody\">Melodies.BaDing</field></shadow></value><next><block type=\"device_clear_display\"></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block>"],[1,"://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":3605,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"input.onButtonPressed(Button.A, function () {\n    // Map the accelerometer's X-axis reading (-1024 to 1024) to a 10-bit value (0 to 1023)\n    analogValue = Math.map(input.acceleration(Dimension.X), -1024, 1024, 0, 1023)\n    // Optional: Send the value to the serial console for debugging\n    serial.writeValue(\"value\", analogValue)\n    // Play the START tone\n    // Play Middle C for 150ms\n    music.playTone(262, 150)\n    basic.pause(200)\n    for (let index = 9; index >= 0; index--) {\n        // Isolate the bit at the current 'index' position\n        bit = (analogValue >> index) & 1\n\n        // Display a \"1\" or \"0\" on the LED matrix\n        if (bit == 1) {\n            basic.showString(\"1\") // Represents the GREEN LED for a '1'\n        } else {\n            basic.showString(\"0\") // Represents the RED LED for a '0'\n        }\n        basic.pause(300) // Pause to make the sequence readable\n    }\n// Play the END tone (a \"double tone\" melody)\n    music.startMelody(music.builtInMelody(Melodies.BaDing), MelodyOptions.Once)\n    music.startMelody(music.builtInMelody(Melodies.BaDing), MelodyOptions.Once)\n    basic.clearScreen()\n})\nlet bit = 0\nlet analogValue = 0"],[0,"\n"]],"start1":0,"start2":0,"length1":1166,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":239,"start2":239,"length1":32,"length2":31}]}]},{"timestamp":1750272046517,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let bit = 0\" numlines=\"1\" declaredvars=\"bit\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let analogValue = 0\" numlines=\"1\" declaredvars=\"analogValue\"></mutation></block></next></block></statement></block><block type=\"device_button_event\" x=\"264\" y=\"20\"><field name=\"NAME\">Button.A</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"A04CChM!60p/e;?Qdcc!\">analogValue</field><comment pinned=\"false\" h=\"80\" w=\"160\">Map the accelerometer's X-axis reading (-1024 to 1024) to a 10-bit value (0 to 1023)</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"math_map\"><value name=\"value\"><block type=\"device_acceleration\"><field name=\"NAME\">Dimension.X</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\"><field name=\"NUM\">-1024</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\"><field name=\"NUM\">1024</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\"><field name=\"NUM\">1023</field></shadow></value></block></value><next><block type=\"serial_writevalue\"><comment pinned=\"false\" h=\"80\" w=\"160\">Optional: Send the value to the serial console for debugging</comment><value name=\"name\"><shadow type=\"text\"><field name=\"TEXT\">value</field></shadow></value><value name=\"value\"><block type=\"variables_get\"><field name=\"VAR\" id=\"A04CChM!60p/e;?Qdcc!\">analogValue</field></block></value><next><block type=\"device_play_note\"><comment pinned=\"false\" h=\"80\" w=\"160\">Play the START tone\nPlay Middle C for 150ms</comment><value name=\"note\"><shadow type=\"device_note\"><field name=\"name\">262</field></shadow></value><value name=\"duration\"><shadow type=\"device_beat\"><field name=\"fraction\">BeatFraction.Whole</field></shadow><block type=\"math_number\"><field name=\"NUM\">150</field></block></value><next><block type=\"device_pause\"><data>{\"commentRefs\":[],\"fieldData\":{}}</data><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"for (let index = 9; index &gt;= 0; index--) {\" line1=\"        // Isolate the bit at the current 'index' position\" line2=\"        bit = (analogValue &gt;&gt; index) &amp; 1\" line3=\"\" line4=\"        // Display a &quot;1&quot; or &quot;0&quot; on the LED matrix\" line5=\"        if (bit == 1) {\" line6=\"            basic.showString(&quot;1&quot;) // Represents the GREEN LED for a '1'\" line7=\"        } else {\" line8=\"            basic.showString(&quot;0&quot;) // Represents the RED LED for a '0'\" line9=\"        }\" line10=\"        basic.pause(500) // Pause to make the sequence readable\" line11=\"    }\" numlines=\"12\"></mutation><next><block type=\"device_start_melody\"><field name=\"options\">MelodyOptions.Once</field><comment pinned=\"false\" h=\"80\" w=\"160\">Play the END tone (a \"double tone\" melody)</comment><value name=\"melody\"><shadow type=\"device_builtin_melody\"><field name=\"melody\">Melodies.BaDing</field></shadow></value><next><block type=\"device_clear_display\"></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><"],[0,"/xml>"]],"start1":129,"start2":129,"length1":13,"length2":3490}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"use("],[-1,"25"],[1,"30"],[0,"0) /"]],"start1":847,"start2":847,"length1":10,"length2":10},{"diffs":[[0,"ce)\n"],[-1,"    basic.pause (500)\n"],[0,"    "]],"start1":1023,"start2":1023,"length1":30,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":234,"start2":234,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1750271645451,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"R&G_Show_Tipper\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1750272366342}